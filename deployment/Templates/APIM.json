{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apimName": {
            "type": "string"
        },
        "fhirAPIUrl":{
            "type": "string"
        },
        "policyApiRead": {
            "type": "string"
        },
        "policyApiWrite": {
            "type": "string"
        },
        "policyProductExternalRead": {
            "type": "string"
        },
        "policyProductExternalWrite": {
            "type": "string"
        },
        "policyProductWebRead": {
            "type": "string"
        },
        "resourceTags": {
            "type": "object"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2020-12-01",
            "name": "[parameters('apimName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Developer",
                "capacity": 1
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "publisherEmail": "christian.leitner@ext.ema.europa.eu",
                "publisherName": "EMA-ePI",
                "notificationSenderEmail": "christian.leitner@ext.ema.europa.eu",
                "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "[concat(parameters('apimName'), '.azure-api.net')]",
                        "negotiateClientCertificate": false,
                        "defaultSslBinding": true
                    }
                ],
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
                },
                "virtualNetworkType": "None",
                "disableGateway": false,
                "apiVersionConstraint": {}
            },
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.ApiManagement/service/apiVersionSets",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-apiset')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "ePI-read",
                "versioningScheme": "Segment"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apiVersionSets",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-write-apiset')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "ePI-write",
                "versioningScheme": "Segment"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Administrators",
                "description": "Administrators is a built-in group. Its membership is managed by the system. Microsoft Azure subscription administrators fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Developers",
                "description": "Developers is a built-in group. Its membership is managed by the system. Signed-in users fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/guests')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Guests",
                "description": "Guests is a built-in group. Its membership is managed by the system. Unauthenticated users visiting the developer portal fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/portalsettings",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/signin')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "enabled": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/portalsettings",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/signup')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "enabled": true,
                "termsOfService": {
                    "enabled": false,
                    "consentRequired": false
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-ext')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "ePI read (external)",
                "description": "Users can read ePI documents. The product is rate-limited and has a usage quota.",
                "subscriptionRequired": true,
                "approvalRequired": true,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-ext')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "ePI read/write (external)",
                "description": "Users can read and write ePI documents. The product is rate-limited and has a usage quota.",
                "subscriptionRequired": true,
                "approvalRequired": true,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-bulk')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "ePI read/write (bulk)",
                "description": "Users can read and write ePI documents. This product is uses for bulk import of ePIs.",
                "subscriptionRequired": true,
                "approvalRequired": true,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-web')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "ePI read (Web-UI)",
                "description": "Users can read ePI documents. The product is rate-limited and has a usage quota per IP-address and is used for the Web-UI.",
                "subscriptionRequired": false,
                "state": "notPublished"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apiVersionSets', parameters('apimName'), 'epi-read-apiset')]"
            ],
            "properties": {
                "displayName": "ePI-read",
                "apiRevision": "1",
                "description": "API to read electronic product information",
                "subscriptionRequired": true,
                "serviceUrl": "[parameters('fhirAPIUrl')]",
                "path": "epi",
                "protocols": [
                    "https"
                ],
                "isCurrent": true,
                "apiVersion": "v1",
                "apiVersionSetId": "[resourceId('Microsoft.ApiManagement/service/apiVersionSets', parameters('apimName'), 'epi-read-apiset')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-write-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apiVersionSets', parameters('apimName'), 'epi-write-apiset')]"
            ],
            "properties": {
                "displayName": "ePI-write",
                "apiRevision": "1",
                "description": "API to write electronic product information",
                "subscriptionRequired": true,
                "serviceUrl": "[parameters('fhirAPIUrl')]",
                "path": "epi-w",
                "protocols": [
                    "https"
                ],
                "isCurrent": true,
                "apiVersion": "v1",
                "apiVersionSetId": "[resourceId('Microsoft.ApiManagement/service/apiVersionSets', parameters('apimName'), 'epi-write-apiset')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-api/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-read-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[parameters('policyApiRead')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-write-api/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-write-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[parameters('policyApiWrite')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-ext/epi-read-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-ext')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-read-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-ext/epi-read-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-ext')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-read-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-ext/epi-write-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-ext')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-write-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-bulk/epi-read-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-bulk')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-read-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-bulk/epi-write-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-bulk')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-write-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-web/epi-read-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-web')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'epi-read-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-ext/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-ext')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-ext/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-ext')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-bulk/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-bulk')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-ext/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-ext')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-ext/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-ext')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-bulk/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-bulk')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-ext/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-ext')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[parameters('policyProductExternalRead')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-write-ext/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-write-ext')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[parameters('policyProductExternalWrite')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products/policies",
            "apiVersion": "2020-12-01",
            "name": "[concat(parameters('apimName'), '/epi-read-web/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('apimName'), 'epi-read-web')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[parameters('policyProductWebRead')]",
                "format": "xml"
            }
        }
    ]
}